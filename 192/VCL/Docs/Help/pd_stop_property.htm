<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=UTF-8">
        <title>
            TProgressDetails Stop Property
        </title>
        <link rel="stylesheet" type="text/css" href="zmhelp.css">
        <meta name="keywords" content="Stop;Stop,TZMProgressDetails;TZMProgressDetails,Stop;">
        <meta name="revised" content="2012-03-16">
        <meta name="copyright" content="Copyright &#169; DelphiZip 2009,2010,2011,2012">
        <meta name="author" content="Russell Peters">
    </head>
    <body>
        <div class="heading">
            <ul class="nav-links">
                <li><a href="cnt.htm" target="cnt">Contents</a></li>
                <li><a href="idx.htm" target="cnt">Index</a></li>
                <li><a href="pd_order_property.htm">Previous</a></li>
                <li><a href="pd_totalcount_property.htm">Next</a></li>
            </ul>
            <h1>
                Stop Property
            </h1>
            <ul class="also-links">
                <li><a href="onprogress_event.htm">OnProgress</a></li>
                <li><a href="onskipped_event.htm">OnSkipped</a></li>
            </ul>
        </div>
        <div class="content">
            <dl class="f">
                <dt class="ft">Applies to</dt>
                <dd class="fd">
                    <p class="f-applies"><a href="tzmprogressdetails_class.htm">TZMProgressDetails</a> class</p>
                </dd>
                <dt class="ft">Declaration</dt>
                <dd class="fd">
                    <p class="f-decl">
                        <b>property</b> Stop: Boolean;
                    </p>
                </dd>
                <dt class="ft">Description</dt>
                <dd class="fd">
                    <p class="f-p">
                        &nbsp; Setting True during <a href="tzmprogressdetails_class.htm#tzmprogresstype">ProgressUpdate</a> will cause any future items to be skipped.
                    </p>
                    <p class="f-p">
                        Run-time only
                    </p>
                </dd>
                <dt class="ft">Example</dt>
                <dd class="fd">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"> <span class="pas-kwd">interface</span>        
          
 <span class="pas-kwd">uses</span>        
   <span class="pas-ident">Windows</span><span class="pas-sym">,</span> <span class="pas-ident">Messages</span><span class="pas-sym">,</span> <span class="pas-ident">SysUtils</span><span class="pas-sym">,</span> <span class="pas-ident">Variants</span><span class="pas-sym">,</span> <span class="pas-ident">Classes</span><span class="pas-sym">,</span> <span class="pas-ident">Graphics</span><span class="pas-sym">,</span> <span class="pas-ident">Controls</span><span class="pas-sym">,</span> <span class="pas-ident">Forms</span><span class="pas-sym">,</span>        
   <span class="pas-ident">Dialogs</span><span class="pas-sym">,</span> <span class="pas-ident">ZipMstr19</span><span class="pas-sym">,</span> <span class="pas-ident">StdCtrls</span><span class="pas-sym">,</span> <span class="pas-ident">ExtCtrls</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">type</span>        
   <span class="pas-ident">TForm1</span> <span class="pas-sym">=</span> <span class="pas-kwd">class</span><span class="pas-sym">(</span><span class="pas-ident">TForm</span><span class="pas-sym">)</span>        
     <span class="pas-ident">Panel1</span><span class="pas-sym">:</span> <span class="pas-ident">TPanel</span><span class="pas-sym">;</span>        
     <span class="pas-ident">Memo1</span><span class="pas-sym">:</span> <span class="pas-ident">TMemo</span><span class="pas-sym">;</span>        
     <span class="pas-ident">Zip1</span><span class="pas-sym">:</span> <span class="pas-ident">TZipMaster19</span><span class="pas-sym">;</span>        
     <span class="pas-ident">CheckBox1</span><span class="pas-sym">:</span> <span class="pas-ident">TCheckBox</span><span class="pas-sym">;</span>  <span class="pas-comment">// checked will stop after 3/4 files done        </span>
     <span class="pas-ident">Button1</span><span class="pas-sym">:</span> <span class="pas-ident">TButton</span><span class="pas-sym">;</span>        
     <span class="pas-kwd">procedure</span> <span class="pas-ident">Button1Click</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-kwd">procedure</span> <span class="pas-ident">FormCreate</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-kwd">procedure</span> <span class="pas-ident">FormClose</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-kwd">var</span> <span class="pas-ident">Action</span><span class="pas-sym">:</span> <span class="pas-ident">TCloseAction</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-comment">// OnMessage event handler        </span>
     <span class="pas-kwd">procedure</span> <span class="pas-ident">Zip1Message</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-ident">ErrCode</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span> <span class="pas-kwd">const</span> <span class="pas-ident">ErrMsg</span><span class="pas-sym">:</span> <span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-comment">// OnProgress event handler        </span>
     <span class="pas-kwd">procedure</span> <span class="pas-ident">Zip1Progress</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-ident">details</span><span class="pas-sym">:</span> <span class="pas-ident">TZMProgressDetails</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-comment">// OnSkipped event handler        </span>
     <span class="pas-kwd">procedure</span> <span class="pas-ident">Zip1Skipped</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-kwd">const</span> <span class="pas-ident">ForFile</span><span class="pas-sym">:</span> <span class="pas-kwd">string</span><span class="pas-sym">;</span> <span class="pas-ident">SkipType</span><span class="pas-sym">:</span>        
         <span class="pas-ident">TZMSkipTypes</span><span class="pas-sym">;</span> <span class="pas-kwd">var</span> <span class="pas-ident">ExtError</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
   <span class="pas-kwd">private</span>        
     <span class="pas-ident">fAllowedFiles</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span> <span class="pas-comment">// number of files to stop after        </span>
     <span class="pas-ident">fFilesToDo</span><span class="pas-sym">:</span> <span class="pas-ident">TStringList</span><span class="pas-sym">;</span>        
     <span class="pas-comment">{ Private declarations }</span>        
   <span class="pas-kwd">public</span>        
     <span class="pas-comment">{ Public declarations }</span>        
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">var</span>        
   <span class="pas-ident">Form1</span><span class="pas-sym">:</span> <span class="pas-ident">TForm1</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">implementation</span>        
          
 <span class="pas-preproc">{$R *.dfm}</span>        
 <span class="pas-kwd">const</span>        
   <span class="pas-ident">TestZipName</span> <span class="pas-sym">=</span> <span class="pas-str">'f:\temp\startstop.zip'</span><span class="pas-sym">;</span>      <span class="pas-comment">// destination file name        </span>
   <span class="pas-ident">TestFiles</span> <span class="pas-sym">=</span> <span class="pas-str">'F:\ZMTestFiles\Floppy3\*.*'</span><span class="pas-sym">;</span>  <span class="pas-comment">// files to be added        </span>
          
 <span class="pas-comment">// starts a new zip operation or restarts an interrupted operation        </span>
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Button1Click</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">var</span>        
   <span class="pas-ident">err</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-kwd">if</span> <span class="pas-sym">(</span><span class="pas-ident">fFilesToDo</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-kwd">nil</span><span class="pas-sym">)</span> <span class="pas-kwd">and</span> <span class="pas-sym">(</span><span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Count</span> <span class="pas-sym">&gt;</span> <span class="pas-num">1</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-comment">// we have started before so continue        </span>
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-ident">fFilesToDo</span><span class="pas-sym">[</span><span class="pas-num">0</span><span class="pas-sym">]</span><span class="pas-sym">;</span> <span class="pas-comment">// the saved name        </span>
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">AddOptions</span> <span class="pas-sym">:=</span> <span class="pas-sym">[</span><span class="pas-ident">AddDirNames</span><span class="pas-sym">,</span> <span class="pas-ident">AddSafe</span><span class="pas-sym">]</span><span class="pas-sym">;</span> <span class="pas-comment">// using AddSafe is slower but preserves the previous file on errors        </span>
     <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Delete</span><span class="pas-sym">(</span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// remove zip name        </span>
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Clear</span><span class="pas-sym">;</span> <span class="pas-comment">// we only want listed files        </span>
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgsExcl</span><span class="pas-sym">.</span><span class="pas-ident">Clear</span><span class="pas-sym">;</span>        
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">AddStrings</span><span class="pas-sym">(</span><span class="pas-ident">fFilesToDo</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// the list of files        </span>
     <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Clear</span><span class="pas-sym">;</span>  <span class="pas-comment">// empty the list        </span>
     <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">+</span> <span class="pas-str">' has '</span> <span class="pas-sym">+</span> <span class="pas-ident">IntToStr</span><span class="pas-sym">(</span><span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-sym">)</span> <span class="pas-sym">+</span> <span class="pas-str">' files'</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-comment">// display message (for diagnostic purposes)        </span>
   <span class="pas-kwd">end</span>        
   <span class="pas-kwd">else</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-comment">// first try        </span>
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-ident">TestZipName</span><span class="pas-sym">;</span>        
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">AddOptions</span> <span class="pas-sym">:=</span> <span class="pas-sym">[</span><span class="pas-ident">AddDirNames</span><span class="pas-sym">,</span> <span class="pas-ident">AddRecurseDirs</span><span class="pas-sym">]</span><span class="pas-sym">;</span>        
     <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TestFiles</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
   <span class="pas-ident">err</span> <span class="pas-sym">:=</span> <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">;</span>        
   <span class="pas-comment">// check was successful        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">err</span> <span class="pas-sym">=</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>        
     <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">' zipped '</span> <span class="pas-sym">+</span> <span class="pas-ident">IntToStr</span><span class="pas-sym">(</span><span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">SuccessCnt</span><span class="pas-sym">)</span> <span class="pas-sym">+</span> <span class="pas-str">' files'</span><span class="pas-sym">)</span>        
   <span class="pas-kwd">else</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-comment">// handle the error        </span>
     <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">' Error '</span> <span class="pas-sym">+</span> <span class="pas-ident">IntToStr</span><span class="pas-sym">(</span><span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ErrCode</span><span class="pas-sym">)</span> <span class="pas-sym">+</span> <span class="pas-str">' :: '</span> <span class="pas-sym">+</span> <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ErrMessage</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">FormCreate</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-comment">// if we saved the 'todo' list        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">FileExists</span><span class="pas-sym">(</span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">ExeName</span> <span class="pas-sym">+</span> <span class="pas-str">'.txt'</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-ident">fFilesToDo</span> <span class="pas-sym">:=</span> <span class="pas-ident">TStringList</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">;</span>        
     <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">LoadFromFile</span><span class="pas-sym">(</span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">ExeName</span> <span class="pas-sym">+</span> <span class="pas-str">'.txt'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">FormClose</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-kwd">var</span> <span class="pas-ident">Action</span><span class="pas-sym">:</span> <span class="pas-ident">TCloseAction</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-comment">// if the application will be closed before restart        </span>
   <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">SaveToFile</span><span class="pas-sym">(</span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">ExeName</span> <span class="pas-sym">+</span> <span class="pas-str">'.txt'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>  <span class="pas-comment">// save files to be done        </span>
   <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Free</span><span class="pas-sym">;</span>  <span class="pas-comment">// free the list        </span>
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Zip1Message</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-ident">ErrCode</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span> <span class="pas-kwd">const</span> <span class="pas-ident">ErrMsg</span><span class="pas-sym">:</span> <span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">'['</span> <span class="pas-sym">+</span> <span class="pas-ident">IntToStr</span><span class="pas-sym">(</span><span class="pas-ident">ErrCode</span><span class="pas-sym">)</span> <span class="pas-sym">+</span> <span class="pas-str">']: '</span> <span class="pas-sym">+</span> <span class="pas-ident">ErrMsg</span><span class="pas-sym">)</span><span class="pas-sym">;</span>  <span class="pas-comment">// display any message (for diagnostic purposes)        </span>
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Zip1Progress</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-ident">details</span><span class="pas-sym">:</span> <span class="pas-ident">TZMProgressDetails</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">var</span>        
   <span class="pas-ident">more</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-kwd">if</span> <span class="pas-ident">CheckBox1</span><span class="pas-sym">.</span><span class="pas-ident">Checked</span> <span class="pas-kwd">then</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-kwd">if</span> <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">Order</span> <span class="pas-sym">=</span> <span class="pas-ident">TotalFiles2Process</span> <span class="pas-kwd">then</span>        
     <span class="pas-kwd">begin</span>        
       <span class="pas-ident">more</span> <span class="pas-sym">:=</span> <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">TotalCount</span> <span class="pas-sym">-</span> <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-sym">;</span>        
       <span class="pas-kwd">if</span> <span class="pas-ident">more</span> <span class="pas-sym">&lt;</span> <span class="pas-num">4</span> <span class="pas-kwd">then</span>        
       <span class="pas-kwd">begin</span>        
         <span class="pas-ident">CheckBox1</span><span class="pas-sym">.</span><span class="pas-ident">Checked</span> <span class="pas-sym">:=</span> <span class="pas-ident">False</span><span class="pas-sym">;</span> <span class="pas-comment">// limit it or we might never finish        </span>
         <span class="pas-ident">fAllowedFiles</span> <span class="pas-sym">:=</span> <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">TotalCount</span> <span class="pas-sym">+</span> <span class="pas-num">1</span><span class="pas-sym">;</span> <span class="pas-comment">// do all        </span>
       <span class="pas-kwd">end</span>        
       <span class="pas-kwd">else</span>        
         <span class="pas-ident">fAllowedFiles</span> <span class="pas-sym">:=</span> <span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">Count</span> <span class="pas-sym">+</span> <span class="pas-sym">(</span><span class="pas-sym">(</span><span class="pas-ident">more</span> <span class="pas-kwd">div</span> <span class="pas-num">4</span><span class="pas-sym">)</span> <span class="pas-sym">*</span> <span class="pas-num">3</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
     <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
     <span class="pas-comment">// count down files done        </span>
     <span class="pas-kwd">if</span> <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">Order</span> <span class="pas-sym">=</span> <span class="pas-ident">NewFile</span> <span class="pas-kwd">then</span>        
       <span class="pas-ident">Dec</span><span class="pas-sym">(</span><span class="pas-ident">fAllowedFiles</span><span class="pas-sym">)</span><span class="pas-sym">;</span>  <span class="pas-comment">// count the file we are doing        </span>
          
     <span class="pas-comment">// trigger stop when all allowed files done        </span>
     <span class="pas-kwd">if</span> <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">Order</span> <span class="pas-sym">=</span> <span class="pas-ident">ProgressUpdate</span> <span class="pas-kwd">then</span>        
     <span class="pas-kwd">begin</span>        
       <span class="pas-comment">// check done the allotted count        </span>
       <span class="pas-kwd">if</span> <span class="pas-ident">fAllowedFiles</span> <span class="pas-sym">&lt;=</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>        
       <span class="pas-kwd">begin</span>        
         <span class="pas-ident">details</span><span class="pas-sym">.</span><span class="pas-ident">Stop</span> <span class="pas-sym">:=</span> <span class="pas-ident">True</span><span class="pas-sym">;</span>  <span class="pas-comment">// set stop after file done        </span>
         <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">' set stop!'</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// display message (for diagnostic purposes)        </span>
       <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
     <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
          
 <span class="pas-kwd">procedure</span> <span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Zip1Skipped</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span> <span class="pas-ident">TObject</span><span class="pas-sym">;</span> <span class="pas-kwd">const</span> <span class="pas-ident">ForFile</span><span class="pas-sym">:</span> <span class="pas-kwd">string</span><span class="pas-sym">;</span> <span class="pas-ident">SkipType</span><span class="pas-sym">:</span>        
     <span class="pas-ident">TZMSkipTypes</span><span class="pas-sym">;</span> <span class="pas-kwd">var</span> <span class="pas-ident">ExtError</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">)</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">begin</span>        
   <span class="pas-kwd">if</span> <span class="pas-sym">(</span><span class="pas-ident">fAllowedFiles</span> <span class="pas-sym">&lt;=</span> <span class="pas-num">0</span><span class="pas-sym">)</span> <span class="pas-kwd">and</span> <span class="pas-sym">(</span><span class="pas-ident">SkipType</span> <span class="pas-sym">=</span> <span class="pas-ident">stUser</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>        
   <span class="pas-kwd">begin</span>        
     <span class="pas-comment">// save files in a list        </span>
     <span class="pas-kwd">if</span> <span class="pas-ident">fFilesToDo</span> <span class="pas-sym">=</span> <span class="pas-kwd">nil</span> <span class="pas-kwd">then</span>        
       <span class="pas-ident">fFilesToDo</span> <span class="pas-sym">:=</span> <span class="pas-ident">TStringList</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">;</span>         
     <span class="pas-kwd">if</span> <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Count</span> <span class="pas-sym">&lt;</span> <span class="pas-num">1</span> <span class="pas-kwd">then</span>           <span class="pas-comment">// if empty        </span>
       <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">Zip1</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// save zip name first        </span>
     <span class="pas-ident">fFilesToDo</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">ForFile</span><span class="pas-sym">)</span><span class="pas-sym">;</span>                  <span class="pas-comment">// save the skipped file        </span>
     <span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">' skipped '</span> <span class="pas-sym">+</span> <span class="pas-ident">ForFile</span><span class="pas-sym">)</span><span class="pas-sym">;</span>  <span class="pas-comment">// display message (for diagnostic purposes)        </span>
   <span class="pas-kwd">end</span><span class="pas-sym">;</span>        
 <span class="pas-kwd">end</span><span class="pas-sym">;</span>        </pre>
                </dd>
            </dl>
        </div>
        <div class="foot">2012-03-16 10:28</div>
    </body>
</html>