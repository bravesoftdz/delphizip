<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=UTF-8">
        <title>
            Working with SFX
        </title>
        <link rel="stylesheet" type="text/css" href="zmhelp.css">
        <meta name="keywords" content="working with sfx;">
        <meta name="revised" content="2012-03-09">
        <meta name="copyright" content="Copyright &#169; DelphiZip 2009,2010,2011,2012">
        <meta name="author" content="Russell Peters">
    </head>
    <body>
        <div class="heading">
            <ul class="nav-links">
                <li><a href="cnt.htm" target="cnt">Contents</a></li>
                <li><a href="idx.htm" target="cnt">Index</a></li>
            </ul>
            <h1>
                Working with SFX
            </h1>
        </div>
        <div class="content">
            <p>Before doing any of the following operations on a SFX -</p>
			<ul>
				<li> <a href="add.htm">Add</a> </li>
				<li> <a href="addzippedfiles.htm">AddZippedFiles</a> </li>
				<li> <a href="changefiledetails.htm">ChangeFileDetails</a> </li>
				<li> <a href="converttosfx.htm">ConvertToSFX</a> </li> 
				<li> <a href="converttospansfx.htm">ConvertToSpanSFX</a> </li> 
				<li> <a href="copyzippedfiles.htm">CopyZippedFiles</a> </li> 
				<li> <a href="delete.htm">Delete</a> </li> 
				<li> <a href="mergezippedfiles.htm">MergeZippedFiles</a></li>
				<li> <a href="rename.htm">Rename</a> </li>
			</ul>
            <p>&nbsp;</p>
            <p>The following properties need to be valid -</p>
			<ul>			
				<li> <a href="sfxcaption_property.htm">SFXCaption</a> </li> 
				<li> <a href="sfxcommandline_property.htm">SFXCommandLine</a> </li> 
				<li> <a href="sfxdefaultdir_property.htm">SFXDefaultDir</a> </li> 
				<li> <a href="sfxicon_property.htm">SFXIcon</a> </li> 
				<li> <a href="sfxmessage_property.htm">SFXMessage</a> </li> 
				<li> <a href="sfxoptions_property.htm">SFXOptions</a> </li> 
				<li> <a href="sfxoverwritemode_property.htm">SFXOverwriteMode</a> </li> 
				<li> <a href="sfxpath_property.htm">SFXPath</a> </li> 
				<li> <a href="sfxregfailpath_property.htm">SFXRegFailPath</a> </li>
			</ul>
            <p>Example</p>
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"> <span class="pas-preproc">{$R 'Res\ZMRes19_sfx.res'}</span>   <span class="pas-comment">// link the stub to our application        </span>
          
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-str">'Example.EXE'</span><span class="pas-sym">;</span>   <span class="pas-comment">// file to work on        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">ErrCode</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>         
       <span class="pas-ident">Handle_the_error</span><span class="pas-err">!</span>        
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span> <span class="pas-sym">:=</span> <span class="pas-str">'*.pas'</span><span class="pas-sym">;</span>              
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXCaption</span> <span class="pas-sym">:=</span> <span class="pas-str">'Sample SFX'</span><span class="pas-sym">;</span>        
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXCommandLine</span> <span class="pas-sym">:=</span> <span class="pas-str">''</span><span class="pas-sym">;</span>   <span class="pas-comment">// no post-extract operation        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXDefaultDir</span> <span class="pas-sym">:=</span> <span class="pas-str">'c:\temp'</span><span class="pas-sym">;</span>   <span class="pas-comment">// a default destination        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXIcon</span> <span class="pas-sym">:=</span> <span class="pas-kwd">nil</span><span class="pas-sym">;</span>   <span class="pas-comment">// use default        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXMessage</span> <span class="pas-sym">:=</span> <span class="pas-str">'This is an example'</span><span class="pas-sym">;</span>   <span class="pas-comment">// a MessageBox before the main dialog        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXOptions</span> <span class="pas-sym">:=</span> <span class="pas-sym">[</span><span class="pas-ident">soCanBeCancelled</span><span class="pas-sym">]</span><span class="pas-sym">;</span>   <span class="pas-comment">// allow cancelling extraction        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXOverwriteMode</span> <span class="pas-sym">:=</span> <span class="pas-ident">ovrConfrim</span><span class="pas-sym">;</span>   <span class="pas-comment">// ask before overwriting        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXPath</span> <span class="pas-sym">:=</span> <span class="pas-str">'&gt;&lt;'</span><span class="pas-sym">;</span>   <span class="pas-comment">// use the stub in the Resources        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXRegFailPath</span> <span class="pas-sym">:=</span> <span class="pas-str">''</span><span class="pas-sym">;</span>   <span class="pas-comment">// not using registry paths        </span>
          
   <span class="pas-ident">err</span> <span class="pas-sym">:=</span> <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">;</span>   <span class="pas-comment">// do the operation        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">err</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>        
       <span class="pas-ident">Handle_the_error</span><span class="pas-err">!</span>        
          
 <span class="pas-ident">Notes</span><span class="pas-sym">:</span>        
   <span class="pas-float">1.</span> <span class="pas-kwd">if</span> <span class="pas-ident">the</span> <span class="pas-kwd">file</span> <span class="pas-ident">exists</span> <span class="pas-ident">before</span> <span class="pas-ident">setting</span> <span class="pas-ident">ZipFileName</span> <span class="pas-kwd">and</span> <span class="pas-ident">the</span> <span class="pas-ident">SFX</span> <span class="pas-ident">properties</span> <span class="pas-ident">can</span> <span class="pas-ident">be</span> <span class="pas-kwd">read</span> <span class="pas-ident">the</span> <span class="pas-ident">SFX</span><span class="pas-err">?</span><span class="pas-err">?</span> <span class="pas-ident">properties</span> <span class="pas-ident">will</span> <span class="pas-ident">be</span> <span class="pas-ident">loaded</span> <span class="pas-ident">from</span> <span class="pas-ident">that</span> <span class="pas-kwd">file</span><span class="pas-sym">.</span>        
   <span class="pas-float">2.</span> <span class="pas-ident">setting</span> <span class="pas-ident">any</span> <span class="pas-ident">SFX</span><span class="pas-err">?</span><span class="pas-err">?</span> <span class="pas-kwd">property</span> <span class="pas-ident">before</span> <span class="pas-ident">setting</span> <span class="pas-ident">ZipFileName</span> <span class="pas-ident">will</span> <span class="pas-ident">stop</span> <span class="pas-ident">the</span> <span class="pas-ident">old</span> <span class="pas-ident">properties</span> <span class="pas-ident">from</span> <span class="pas-ident">being</span> <span class="pas-ident">used</span><span class="pas-sym">.</span>        
   <span class="pas-float">3.</span> <span class="pas-ident">unless</span> <span class="pas-ident">the</span> <span class="pas-ident">stub</span> <span class="pas-kwd">is</span> <span class="pas-ident">linked</span> <span class="pas-kwd">in</span> <span class="pas-ident">the</span> <span class="pas-ident">applications</span> <span class="pas-ident">resources</span><span class="pas-sym">,</span> <span class="pas-ident">SFXPath</span> <span class="pas-ident">must</span> <span class="pas-ident">be</span> <span class="pas-kwd">set</span> <span class="pas-kwd">to</span> <span class="pas-ident">a</span> <span class="pas-ident">valid</span> <span class="pas-ident">stub</span><span class="pas-sym">.</span>        </pre>
                <p>Example</p>
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"> <span class="pas-preproc">{$R 'Res\ZMRes19_sfx.res'}</span>   <span class="pas-comment">// link the stub to our application        </span>
          
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-str">'Example.EXE'</span><span class="pas-sym">;</span>   <span class="pas-comment">// file to work on        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">ErrCode</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>         
       <span class="pas-ident">Handle_the_error</span><span class="pas-err">!</span>        
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span> <span class="pas-sym">:=</span> <span class="pas-str">'*.pas'</span><span class="pas-sym">;</span>              
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXCaption</span> <span class="pas-sym">:=</span> <span class="pas-str">'Sample SFX'</span><span class="pas-sym">;</span>        
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXCommandLine</span> <span class="pas-sym">:=</span> <span class="pas-str">''</span><span class="pas-sym">;</span>   <span class="pas-comment">// no post-extract operation        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXDefaultDir</span> <span class="pas-sym">:=</span> <span class="pas-str">'c:\temp'</span><span class="pas-sym">;</span>   <span class="pas-comment">// a default destination        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXIcon</span> <span class="pas-sym">:=</span> <span class="pas-kwd">nil</span><span class="pas-sym">;</span>   <span class="pas-comment">// use default        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXMessage</span> <span class="pas-sym">:=</span> <span class="pas-str">'This is an example'</span><span class="pas-sym">;</span>   <span class="pas-comment">// a MessageBox before the main dialog        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXOptions</span> <span class="pas-sym">:=</span> <span class="pas-sym">[</span><span class="pas-ident">soCanBeCancelled</span><span class="pas-sym">]</span><span class="pas-sym">;</span>   <span class="pas-comment">// allow cancelling extraction        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXOverwriteMode</span> <span class="pas-sym">:=</span> <span class="pas-ident">ovrConfrim</span><span class="pas-sym">;</span>   <span class="pas-comment">// ask before overwriting        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXPath</span> <span class="pas-sym">:=</span> <span class="pas-str">'&gt;&lt;'</span><span class="pas-sym">;</span>   <span class="pas-comment">// use the stub in the Resources        </span>
   <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">SFXRegFailPath</span> <span class="pas-sym">:=</span> <span class="pas-str">''</span><span class="pas-sym">;</span>   <span class="pas-comment">// not using registry paths        </span>
          
   <span class="pas-ident">err</span> <span class="pas-sym">:=</span> <span class="pas-ident">zip</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">;</span>   <span class="pas-comment">// do the operation        </span>
   <span class="pas-kwd">if</span> <span class="pas-ident">err</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span> <span class="pas-kwd">then</span>        
       <span class="pas-ident">Handle_the_error</span><span class="pas-err">!</span>        
          
 <span class="pas-ident">Notes</span><span class="pas-sym">:</span>        
   <span class="pas-float">1.</span> <span class="pas-kwd">if</span> <span class="pas-ident">the</span> <span class="pas-kwd">file</span> <span class="pas-ident">exists</span> <span class="pas-ident">before</span> <span class="pas-ident">setting</span> <span class="pas-ident">ZipFileName</span> <span class="pas-kwd">and</span> <span class="pas-ident">the</span> <span class="pas-ident">SFX</span> <span class="pas-ident">properties</span> <span class="pas-ident">can</span> <span class="pas-ident">be</span> <span class="pas-kwd">read</span> <span class="pas-ident">the</span> <span class="pas-ident">SFX</span><span class="pas-err">?</span><span class="pas-err">?</span> <span class="pas-ident">properties</span> <span class="pas-ident">will</span> <span class="pas-ident">be</span> <span class="pas-ident">loaded</span> <span class="pas-ident">from</span> <span class="pas-ident">that</span> <span class="pas-kwd">file</span><span class="pas-sym">.</span>        
   <span class="pas-float">2.</span> <span class="pas-ident">setting</span> <span class="pas-ident">any</span> <span class="pas-ident">SFX</span><span class="pas-err">?</span><span class="pas-err">?</span> <span class="pas-kwd">property</span> <span class="pas-ident">before</span> <span class="pas-ident">setting</span> <span class="pas-ident">ZipFileName</span> <span class="pas-ident">will</span> <span class="pas-ident">stop</span> <span class="pas-ident">the</span> <span class="pas-ident">old</span> <span class="pas-ident">properties</span> <span class="pas-ident">from</span> <span class="pas-ident">being</span> <span class="pas-ident">used</span><span class="pas-sym">.</span>        
   <span class="pas-float">3.</span> <span class="pas-ident">unless</span> <span class="pas-ident">the</span> <span class="pas-ident">stub</span> <span class="pas-kwd">is</span> <span class="pas-ident">linked</span> <span class="pas-kwd">in</span> <span class="pas-ident">the</span> <span class="pas-ident">applications</span> <span class="pas-ident">resources</span><span class="pas-sym">,</span> <span class="pas-ident">SFXPath</span> <span class="pas-ident">must</span> <span class="pas-ident">be</span> <span class="pas-kwd">set</span> <span class="pas-kwd">to</span> <span class="pas-ident">a</span> <span class="pas-ident">valid</span> <span class="pas-ident">stub</span><span class="pas-sym">.</span>        </pre>
        </div>
        <div class="foot">2012-03-09 11:10</div>
    </body>
</html>