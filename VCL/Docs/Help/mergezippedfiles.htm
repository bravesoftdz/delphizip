<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=UTF-8">
        <title>
            MergeZippedFiles type
        </title>
        <link rel="stylesheet" type="text/css" href="zmhelp.css">
        <meta name="keywords" content="MergeZippedFiles;Methods;MergeZippedFiles,TZipmaster;TZipMaster,MergeZippedFiles;">
        <meta name="revised" content="2012-03-01">
        <meta name="copyright" content="Copyright &#169; DelphiZip 2009,2010,2011,2012">
        <meta name="author" content="Russell Peters">
    </head>
    <body>
        <div class="heading">
            <ul class="nav-links">
                <li><a href="cnt.htm" target="cnt">Contents</a></li>
                <li><a href="idx.htm" target="cnt">Index</a></li>
                <li><a href="maketempfilename.htm">Previous</a></li>
                <li><a href="queryzip.htm">Next</a></li>
            </ul>
            <h1>
                MergeZippedFiles type
            </h1>
            <ul class="also-links">
                <li><a href="addzippedfiles.htm">AddZippedFiles</a></li>
                <li><a href="copyzippedfiles.htm">CopyZippedFiles</a></li>
                <li><a href="onmergezippedconflict_event.htm">OnCopyZippedConflict</a></li>
                <li><a href="uf_qualifiedname.htm">QualifiedName</a></li>
                <li><a href="uf_splitqualifiedname.htm">SplitQualifiedName</a></li>
            </ul>
        </div>
        <div class="content">
            <dl class="f">
                <dt class="ft">Unit</dt>
                <dd class="fd">
                    <p class="f-applies"><a href="zipmstr_unit.htm">ZipMstr</a></p>
                </dd>
                <dt class="ft">Declaration</dt>
                <dd class="fd"> 
                    <p class="f-decl">
                        <b>function</b> MergeZippedFiles(Opts: TZMMergeOpts): Integer;
                    </p>
                    <p class="f-decl">
                        <b>type</b><br>&nbsp; <a name="tzmmergeopts">TZMMergeOpts</a> = (zmoConfirm, zmoAlways, zmoNewer, zmoOlder, zmoNever);
                    </p>
					<dl class="f">
						<dt class="ft">Arguments</dt>
						<dd class="fd">
							<dl class="tight">
								<dt><span class="mono">Opts: <b>TZMMergeOpts</b></span></dt>
								<dd>Controls merging files with conflicting names
									<table class="std" summary="TZMMergeOpts enum" border="1">
									<tr>
										<th>zmoConfirm</th>
										<td>Ask via <a href="onmergezippedconflict_event.htm">OnMergeZippedConflict</a> event on each conflict</td>
									</tr>
									<tr>
										<th>zmoAlways</th>
										<td>always replace the existing file</td>
									</tr>
									<tr>
										<th>zmoNewer</th>
										<td>replace the existing if the new file is newer</td>
									</tr>
									<tr>
										<th>zmoOlder</th>
										<td>replace the existing if the new file is older</td>
									</tr>
									<tr>
										<th>zmoNever</th>
										<td>never replace the existing file</td>
									</tr>
									</table>
									
								</dd>
								<dt><span class="mono"><a href="fspecargs_property.htm">FSpecArgs</a>: TStrings</span></dt>
								<dd>The script specifying source zips and there file specs</dd>  
								<dt><span class="mono"><a href="fspecargsexcl_property.htm">FSpecArgsExcl</a>: TStrings</span></dt>
								<dd>List of zips and file specs to exclude</dd>
							</dl>
						</dd> 
						<dt class="ft">Results</dt>
						<dd class="fd">
							<ul class="ul-left">
								<li>Returns 0 on success otherwise a negative value equal to - <a href="errors_and_messages.htm">Error Code</a>.</li>
								<li>Sets <a href="errcode_property.htm">ErrCode</a> and <a href="errmessage_property.htm">ErrMessage</a></li> 
								<li>Sets <a href="successcnt_property.htm">SuccessCnt</a> to the number of files merged</li>
								<li><a href="fspecargs_property.htm">FSpecArgs</a> contains list of files merged, this list can be used to delete the merged files from the source zips by making a call to the <a href="delete.htm">Delete</a> method, after the merge operation.</li>
								<li><a href="fspecargsexcl_property.htm">FSpecArgsExcl</a> contains list of files that could not be merged</li>
							</ul>
						</dd>
					</dl>
                </dd> 
                <dt class="ft">Description</dt>
                <dd class="fd">
                    <p class="f-p">
					    MergeZippedFiles merges zipped entries from one or multiple source zip archives to a destination zip archive without, the possibly time-consuming need, of extracting and re-zipping again. The destination zip can be a new (not existing) zip file or an existing zip file.
					</p>
					<p class="f-p">
						Merge can be done with whole zip archives or files can be filtered to be included and/or excluded, the syntax for specifying the files is explained in <A href="filespec_switches.htm">switches</A>.
					</p>
					<p class="f-p">
						When a naming conflict is found the used TZMMergeOpts will indicate what action will be taken.<br>
						If Opts is 'zmoConfirm' a <A href="onmergezippedconflict_event.htm">OnMergeZippedConflict</A> event will be generated.<br> 
						If no event handler is provided the component will use its own Dialog 
						with existing file, conflicting file and suggested new name, the dialog has 3 possible result buttons:<br>
						- Yes : Change the conflicting name in the suggested name and do the merge.<br> 
						- No : Keep the existing file and skip the conflicting file.<br>
						-Ignore : Skip (delete) the existing file and keep (merge) the conflicting file.
					</p>
                </dd>
				<dt class="ft">Example</dt>
				<dd class="fd">
				<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-comment">// Example 1 : Merging zip files excluding one file</span>
<span class="pas-kwd">function</span> <span class="pas-ident">EX1</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-str">'NewFile.zip'</span><span class="pas-sym">;</span> <span class="pas-comment">// Merge to new file</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TempPath</span> <span class="pas-sym">+</span> <span class="pas-str">'MergeTest_A.zip'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TempPath</span> <span class="pas-sym">+</span> <span class="pas-str">'MergeTest_B.zip'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TempPath</span> <span class="pas-sym">+</span> <span class="pas-str">'MergeTest_C.zip'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgsExcl</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">'TestZipReference\Sources\Onroe10.dll'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-comment">// exclude 1 file</span>
  <span class="pas-ident">Result</span> <span class="pas-sym">:=</span> <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">MergeZippedFiles</span><span class="pas-sym">(</span><span class="pas-ident">zmoAlways</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// always overwrite</span>
  <span class="pas-kwd">if</span> <span class="pas-sym">(</span><span class="pas-ident">Result</span>  <span class="pas-num">0</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>
    <span class="pas-ident">Handle_error</span><span class="pas-sym">(</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// Example 2 : Merging zip files using some switches + delete merged files</span>
<span class="pas-kwd">function</span> <span class="pas-ident">EX2</span><span class="pas-sym">:</span> <span class="pas-ident">Integer</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-str">'NewFile.zip'</span><span class="pas-sym">;</span> <span class="pas-comment">// Merge to new file</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TempPath</span> <span class="pas-sym">+</span> <span class="pas-str">'MergeTest_A.zip&gt;&gt;*.dat'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-comment">// get *.dat from mergetest_A</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">'&gt;&gt;*.dll /E:TestZipReference\Sources\Onroe10.dll'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-comment">// get also *.dll exclude 1 file</span>
  <span class="pas-comment">// all dll files from MergeZip_B that is a file inside MergeTest_E.zip</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">TempPath</span> <span class="pas-sym">+</span> <span class="pas-str">'MergeTest_E.zip&gt;&gt;MergeTest_B.zip&gt;&gt;*.dll'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-ident">Result</span> <span class="pas-sym">:=</span> <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">MergeZippedFiles</span><span class="pas-sym">(</span><span class="pas-ident">zmoConfirm</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// confirm overwrite</span>
  <span class="pas-kwd">if</span> <span class="pas-sym">(</span><span class="pas-ident">Result</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>
    <span class="pas-ident">Handle_error</span><span class="pas-sym">(</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
  <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span> <span class="pas-sym">:=</span> <span class="pas-str">''</span><span class="pas-sym">;</span> <span class="pas-comment">// reset filename to use the list in FSpecArgs</span>
  <span class="pas-ident">Result</span> <span class="pas-sym">:=</span> <span class="pas-ident">Zip</span><span class="pas-sym">.</span><span class="pas-ident">Delete</span><span class="pas-sym">(</span><span class="pas-sym">)</span><span class="pas-sym">;</span> <span class="pas-comment">// use specs in FSpecArgs created by Merge</span>
  <span class="pas-kwd">if</span> <span class="pas-sym">(</span><span class="pas-ident">Result</span> <span class="pas-sym">&lt;&gt;</span> <span class="pas-num">0</span><span class="pas-sym">)</span> <span class="pas-kwd">then</span>
    <span class="pas-ident">Handle_error</span><span class="pas-sym">(</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span></pre>
				</dd>
            </dl>
        </div>
        <div class="foot">2012-03-01 10:53</div>
    </body>
</html>