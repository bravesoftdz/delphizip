<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=UTF-8">
        <title>
            ForEach method
        </title>
        <link rel="stylesheet" type="text/css" href="zmhelp.css">
        <meta name="keywords" content="ForEach;ForEach,TZipMaster;TZipMaster,ForEach;">
        <meta name="revised" content="2012-01-18">
        <meta name="copyright" content="Copyright &#169; DelphiZip 2009,2010,2011,2012">
        <meta name="author" content="Russell Peters">
    </head>
    <body>
        <div class="heading">
            <ul class="nav-links">
                <li><a href="cnt.htm" target="cnt">Contents</a></li>
                <li><a href="idx.htm" target="cnt">Index</a></li>
                <li><a href="find.htm">Previous</a></li>
                <li><a href="fullversionstring.htm">Next</a></li>
            </ul>
            <h1>
                ForEach method
            </h1>
        </div>
        <div class="content">
            <dl class="f">
                <dt class="ft">Applies to</dt>
                <dd class="fd">
                    <p class="f-applies"><a href="tzipmaster_component.htm">TZipMaster</a> component</p>
                </dd>
                <dt class="ft">Declaration</dt>
                <dd class="fd">
                    <p class="f-decl">
                        <b>function</b> ForEach(func: <a name="tzmforeachfunction">TZMForEachFunction</a>; <b>var</b> Data): Integer;
                    </p>
					<dl class="f">
                <dt class="ft">Arguments</dt>
                <dd class="fd">
                    <dl>
                        <dt><span class="mono">func: TZMForEachFunction</span></dt>
                        <dd>function called for each selected entry</dd>
                        <dt><span class="mono">var Data</span></dt>
                        <dd>untyped variable - Data is passed to each call of func to allow access to any needed data.</dd>
                    </dl>
                </dd>
                <dt class="ft">Results</dt>
                <dd class="fd">
                    <ul class="ul-left">
                        <li>Returns 0 on success otherwise a negative value equal to - <a href="errors_and_messages.htm">Error Code</a>.</li>
                        <li>Sets <a href="errcode_property.htm">ErrCode</a> and <a href="errmessage_property.htm">ErrMessage</a></li>
                        <li><a href="fspecargs_property.htm">FSpecArgs</a> contains processed file names.</li>
                        <li><a href="fspecargsexcl_property.htm">FSpecArgsExcl</a> contains skipped files</li>
                    </ul>
                </dd>
					</dl>
                </dd>
                <dt class="ft">Description</dt>
                <dd class="fd">
                    <p class="f-p">
                        Applies func to each <a href="selecting_files.htm">selected</a> entry.
                    </p>
                    <p class="f-p">
                        func can not modify any entry.
                    </p>
                    <p class="f-p">
                        If <a href="noskipping_property.htm">NoSkipping</a> is True all selected files must be successfully processed otherwise the operation will fail.
                    </p>
                </dd>
                <dt class="ft">Example</dt>
                <dd class="fd">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-space"> </span><span class="pas-comment">// sum the compressed sizes in DATA        </span>
<span class="pas-space"> </span><span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">FEfunc1</span><span class="pas-sym">(</span><span class="pas-ident">theRec</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TZMDirEntry</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-kwd">var</span><span class="pas-space"> </span><span class="pas-ident">Data</span><span class="pas-sym">)</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Integer</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">var</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">iData</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Int64</span><span class="pas-space"> </span><span class="pas-kwd">Absolute</span><span class="pas-space"> </span><span class="pas-ident">Data</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">begin</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">Result</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">;</span><span class="pas-space">         </span><span class="pas-comment">// success        </span>
<span class="pas-space">   </span><span class="pas-ident">iData</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">iData</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">theRec</span><span class="pas-sym">.</span><span class="pas-ident">CompressedSize</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">end</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">          </span>
<span class="pas-space"> </span><span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">SumCompressed</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Int64</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">var</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">total</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Int64</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">begin</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">total</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">ForEach</span><span class="pas-sym">(</span><span class="pas-ident">FEfunc1</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">total</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space">        </span>
<span class="pas-space">     </span><span class="pas-kwd">raise</span><span class="pas-space"> </span><span class="pas-ident">Exception</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">(</span><span class="pas-str">'ForEach failed'</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">Result</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">total</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">end</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">          </span>
<span class="pas-space"> </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Button2Click</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">var</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">total</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Int64</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">begin</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">Clear</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">ZipFileName</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'zTest.zip'</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-kwd">begin</span><span class="pas-space">        </span>
<span class="pas-space">     </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">FSpecArgs</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-str">'*k*.txt'</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-comment">// select some files        </span>
<span class="pas-space">     </span><span class="pas-ident">total</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SumCompressed</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">     </span><span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Add</span><span class="pas-sym">(</span><span class="pas-ident">Format</span><span class="pas-sym">(</span><span class="pas-str">' Total compressed size %d [ %d files ]'</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-ident">total</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">ZipMaster</span><span class="pas-sym">.</span><span class="pas-ident">SuccessCnt</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space">   </span><span class="pas-kwd">end</span><span class="pas-sym">;</span><span class="pas-space">        </span>
<span class="pas-space"> </span><span class="pas-kwd">end</span><span class="pas-sym">;</span><span class="pas-space">        </span></pre>
                </dd>
            </dl>
        </div>
        <div class="foot">2012-01-18 10:59</div>
    </body>
</html>